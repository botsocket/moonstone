'use strict';

module.exports = {
    root: true,
    env: {
        es6: true,
        node: true,
        jest: true,
    },
    parserOptions: {
        ecmaVersion: 9,
    },
    plugins: ['@hapi/eslint-plugin-hapi'],
    rules: {

        // Plugins

        '@hapi/hapi/capitalize-modules': ['error', 'global-scope-only'],
        '@hapi/hapi/no-var': 'error',
        '@hapi/hapi/scope-start': 'error',
        '@hapi/hapi/no-arrowception': 'error',

        // Possible errors

        'for-direction': 'error',
        'getter-return': 'error',
        'no-async-promise-executor': 'error',
        'no-compare-neg-zero': 'error',
        'no-cond-assign': 'error',
        'no-constant-condition': 'error',
        'no-debugger': 'error',
        'no-dupe-args': 'error',
        'no-dupe-else-if': 'error',
        'no-dupe-keys': 'error',
        'no-duplicate-case': 'error',
        'no-empty-character-class': 'error',
        'no-ex-assign': 'error',
        'no-extra-boolean-cast': 'error',
        'no-extra-semi': 'error',
        'no-import-assign': 'error',
        'no-invalid-regexp': 'error',
        'no-irregular-whitespace': 'error',
        'no-misleading-character-class': 'error',
        'no-obj-calls': 'error',
        'no-prototype-builtins': 'error',
        'no-regex-spaces': 'error',
        'no-setter-return': 'error',
        'no-sparse-arrays': 'error',
        'no-unexpected-multiline': 'error',
        'no-unreachable': 'error',
        'no-unsafe-finally': 'error',
        'no-unsafe-negation': 'error',
        'require-atomic-updates': 'error',
        'use-isnan': 'error',

        // Best practices

        'curly': 'error',
        'dot-location': ['error', 'property'],
        'dot-notation': 'error',
        'eqeqeq': 'error',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-constructor-return': 'error',
        'no-else-return': 'error',
        'no-empty-pattern': 'error',
        'no-eval': 'error',
        'no-extra-bind': 'error',
        'no-fallthrough': 'error',
        'no-global-assign': 'error',
        'no-implicit-coercion': 'error',
        'no-implied-eval': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-loop-func': 'error',
        'no-multi-spaces': ['error', { ignoreEOLComments: true }],
        'no-new': 'error',
        'no-new-func': 'error',
        'no-octal': 'error',
        'no-proto': 'error',
        'no-return-assign': 'error',
        'no-return-await': 'error',
        'no-self-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unused-expressions': 'error',
        'no-useless-call': 'error',
        'no-useless-catch': 'error',
        'no-useless-concat': 'error',
        'no-useless-return': 'error',
        'no-void': 'error',
        'no-with': 'error',
        'prefer-regex-literals': 'error',
        'radix': 'error',
        'require-await': 'error',

        // Strict mode

        'strict': ['error', 'global'],

        // Variables

        'no-delete-var': 'error',
        'no-shadow': 'error',
        'no-shadow-restricted-names': 'error',
        'no-undef': 'error',
        'no-undef-init': 'error',
        'no-unused-vars': 'error',

        // Style

        'array-bracket-spacing': ['error', 'never'],
        'brace-style': ['error', 'stroustrup'],
        'comma-dangle': ['error', {
            functions: 'always-multiline',
            objects: 'always-multiline',
            arrays: 'always-multiline',
        }],
        'comma-spacing': 'error',
        'comma-style': 'error',
        'computed-property-spacing': 'error',
        'eol-last': 'error',
        'func-call-spacing': 'error',
        'func-style': 'error',
        'implicit-arrow-linebreak': 'error',
        'indent': ['error', 4, { SwitchCase: 1 }],
        'key-spacing': 'error',
        'keyword-spacing': 'error',
        'linebreak-style': 'error',
        'lines-between-class-members': 'error',
        'new-parens': 'error',
        'no-lonely-if': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-multiple-empty-lines': 'error',
        'no-tabs': 'error',
        'no-trailing-spaces': 'error',
        'no-unneeded-ternary': 'error',
        'no-whitespace-before-property': 'error',
        'object-curly-spacing': ['error', 'always'],
        'operator-assignment': 'error',
        'operator-linebreak': 'error',
        'padding-line-between-statements': [
            'error',
            { blankLine: 'always', prev: 'directive', next: '*' },
            { blankLine: 'always', prev: 'cjs-import', next: '*' },
            { blankLine: 'any', prev: 'cjs-import', next: 'cjs-import' },
            { blankLine: 'always', prev: 'cjs-export', next: '*' },
            { blankLine: 'always', prev: 'multiline-block-like', next: '*' },
            { blankLine: 'always', prev: 'class', next: '*' },
        ],
        'prefer-exponentiation-operator': 'error',
        'prefer-object-spread': 'error',
        'quote-props': ['error', 'as-needed'],
        'quotes': ['error', 'single', { allowTemplateLiterals: true }],
        'semi': 'error',
        'space-before-blocks': 'error',
        'space-before-function-paren': ['error', { anonymous: 'always', named: 'never' }],
        'space-in-parens': 'error',
        'space-infix-ops': 'error',
        'space-unary-ops': ['warn', { words: true, nonwords: false }],
        'spaced-comment': 'error',
        'switch-colon-spacing': 'error',
        'template-tag-spacing': 'error',

        // ES6

        'arrow-spacing': 'error',
        'arrow-parens': 'error',
        'constructor-super': 'error',
        'no-class-assign': 'error',
        'no-const-assign': 'error',
        'no-dupe-class-members': 'error',
        'no-new-symbol': 'error',
        'no-this-before-super': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-constructor': 'error',
        'no-useless-rename': 'error',
        'no-var': 'error',
        'prefer-arrow-callback': 'error',
        'prefer-const': 'error',
        'require-yield': 'error',
        'rest-spread-spacing': 'error',
        'yield-star-spacing': 'error',
    },
};
